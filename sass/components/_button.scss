/*
:link is a pseudo-class. A pseudo-class represents a special state of a selector.
Pseudo-classes are used to style elements under special conditions.
In this case we want the button in visited and link state to look the same.
*/
.btn {
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all 0.2s; /* transition has always to be set in the initial state */
        position: relative;
        font-size: $default-font-size;
    }

    &:hover {
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 1rem rgba($color-black, 0.2);

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
    }

    /*
        ::after pseudo-class creates a virtual element. In this case we create an element
        which looks exactly like the button we already have. (It is basically treated as its child)
    */
    &::after {
        content: ""; /* necessary, otherwise the virtual element will not appear */
        display: inline-block; /* same as the parent */
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1; /* set behind the parent element */

        transition: all 0.4s;
    }

    &--animated {
        animation: moveInBottom 0.5s ease-out 0.75s;

        /* automatically applies the styles of 0% before the animations starts*/
        animation-fill-mode: backwards;
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green{
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block; //so that we can use all the box properties like padding, etc.
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;

        transition: all 0.2s;
    }

    &:hover {
        background-color: $color-primary;
        color: white;
        box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
        transform: translateY(-2px);
    }

    &::active {
        box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
        transform: translateY(0);
    }
}
